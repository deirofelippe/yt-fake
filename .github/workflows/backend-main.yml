name: CI and CD

on:
  push:
    branches: [main, master]
  workflow_dispatch:

jobs:
  CI:
    runs-on: ubuntu-20.04
    defaults:
      run:
        working-directory: backend
    container: node:16.13.2

    services:
      postgres:
        image: postgres:12.8
        env:
          POSTGRES_PASSWORD: root
          POSTGRES_USER: postgres
          POSTGRES_DB: yt_fake
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5

    steps:
      - uses: actions/checkout@v3
        with:
          fetch-depth: 0

      - name: Install dependencies
        run: npm ci

      - name: Rename .env.example to .env
        run: cp .env.example .env

      # - name: Run lint
      #   run: make lint

      - name: Run tests
        run: npm run test:coverage

      - name: Coveralls
        uses: coverallsapp/github-action@master
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          path-to-lcov: "./backend/coverage/lcov.info"
          base-path: "./backend"

      # - name: Run mutation test
      #   run: npm run test:mutation

      - name: SonarCloud Scan
        uses: SonarSource/sonarcloud-github-action@master
        with:
          projectBaseDir: "./backend"
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}

  # CD:
  #   needs: [CI]
  #   runs-on: ubuntu-latest
  #   steps:
  #     - uses: actions/checkout@v2

  #     - name: Deploy application
  #       if: ${{ github.ref == 'refs/heads/master' || github.ref == 'refs/heads/main' }}
  #       uses: akhileshns/heroku-deploy@v3.12.12
  #       with:
  #         heroku_api_key: ${{ secrets.HEROKU_API_KEY }}
  #         heroku_app_name: 'yt_fake'
  #         heroku_email: ${{ secrets.HEROKU_EMAIL }}
